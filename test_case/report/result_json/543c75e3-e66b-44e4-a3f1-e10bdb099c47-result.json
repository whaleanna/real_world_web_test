{"name": "test_login", "status": "broken", "statusDetails": {"message": "TypeError: teardown() missing 1 required positional argument: 'drivers'", "trace": "cls = _pytest.runner.CallInfo\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x00000199DE4A2950>\nwhen = 'teardown'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: \"Optional[Union[Type[BaseException], Tuple[Type[BaseException], ...]]]\" = None,\n    ) -> \"CallInfo[TResult]\":\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result = func()  # type: Optional[TResult]\n\nD:\\python36\\lib\\site-packages\\_pytest\\runner.py:310: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\python36\\lib\\site-packages\\_pytest\\runner.py:256: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nD:\\python36\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nD:\\python36\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nD:\\python36\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nD:\\python36\\lib\\site-packages\\_pytest\\runner.py:176: in pytest_runtest_teardown\n    item.session._setupstate.teardown_exact(item, nextitem)\nD:\\python36\\lib\\site-packages\\_pytest\\runner.py:418: in teardown_exact\n    self._teardown_towards(needed_collectors)\nD:\\python36\\lib\\site-packages\\_pytest\\runner.py:433: in _teardown_towards\n    raise exc\nD:\\python36\\lib\\site-packages\\_pytest\\runner.py:426: in _teardown_towards\n    self._pop_and_teardown()\nD:\\python36\\lib\\site-packages\\_pytest\\runner.py:386: in _pop_and_teardown\n    self._teardown_with_finalization(colitem)\nD:\\python36\\lib\\site-packages\\_pytest\\runner.py:404: in _teardown_with_finalization\n    self._callfinalizers(colitem)\nD:\\python36\\lib\\site-packages\\_pytest\\runner.py:401: in _callfinalizers\n    raise exc\nD:\\python36\\lib\\site-packages\\_pytest\\runner.py:394: in _callfinalizers\n    fin()\nD:\\python36\\lib\\site-packages\\_pytest\\nose.py:15: in <lambda>\n    item.session._setupstate.addfinalizer((lambda: teardown_nose(item)), item)\nD:\\python36\\lib\\site-packages\\_pytest\\nose.py:21: in teardown_nose\n    call_optional(item.parent.obj, \"teardown\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nobj = <test_case.test_login.TestLogin object at 0x00000199DE5BB160>\nname = 'teardown'\n\n    def call_optional(obj, name):\n        method = getattr(obj, name, None)\n        isfixture = hasattr(method, \"_pytestfixturefunction\")\n        if method is not None and not isfixture and callable(method):\n            # If there's any problems allow the exception to raise rather than\n            # silently ignoring them.\n>           method()\nE           TypeError: teardown() missing 1 required positional argument: 'drivers'\n\nD:\\python36\\lib\\site-packages\\_pytest\\nose.py:38: TypeError"}, "description": "\n        登录已存在的用户\n        :return:\n        ", "steps": [{"name": "切换到登录页面", "status": "passed", "start": 1635214347457, "stop": 1635214347457}, {"name": "输入邮箱: leslie111@163.com", "status": "passed", "start": 1635214347501, "stop": 1635214347501}, {"name": "输入密码: leslie111", "status": "passed", "start": 1635214348114, "stop": 1635214348114}, {"name": "点击登录按钮", "status": "passed", "start": 1635214348715, "stop": 1635214348715}], "attachments": [{"name": "截图", "source": "5bf0a399-920d-493b-9197-2a07a92517df-attachment.png", "type": "image/png"}], "start": 1635214347457, "stop": 1635214349613, "uuid": "c4ad5a3c-20e9-4144-9f63-0a994685f928", "historyId": "29097a56a45475cf7444439fb6057a04", "testCaseId": "da88586f2e77db1a02b8abcd6761bb9a", "fullName": "test_case.test_login.TestLogin#test_login", "labels": [{"name": "story", "value": "登录已存在用户"}, {"name": "feature", "value": "登录模块"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "LAPTOP-26V1U3BL"}, {"name": "thread", "value": "8820-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_login"}]}